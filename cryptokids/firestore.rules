rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Users Collection
    match /users/{userId} {
      // Only the user themselves can read/write their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // ✅ Chores (family-scoped)
    match /chores/{choreId} {
      allow read, write: if isParent() && isFamilyScoped(resource.data.familyId);
    }

    // ✅ Fines
    match /fines/{fineId} {
      allow read, write: if isParent() && isFamilyScoped(resource.data.familyId);
    }

    // ✅ Store Items
    match /storeItems/{itemId} {
      allow read, write: if isParent() && isFamilyScoped(resource.data.familyId);
    }

    // ✅ Transactions
    match /transactions/{txId} {
      // Parents can write any, child can write their own, all family members can read
      allow read: if isFamilyScoped(resource.data.familyId);
      allow write: if (isParent() && isFamilyScoped(request.resource.data.familyId)) ||
                   (isChild() && request.auth.uid == request.resource.data.childId);
    }

    // ✅ Helpers (functions)
    function isParent() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "parent";
    }

    function isChild() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "child";
    }

    function isFamilyScoped(familyId) {
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyId == familyId;
    }
  }
}
